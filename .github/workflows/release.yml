name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v2
        with:
          python-version: '3.11'
      - run: python -m pip install poetry

      - name: Install Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends build-essential gcc python3-dev libpq-dev zlib1g-dev
          poetry install -E aws -E cache -E pgsql -E google

      - name: Set version
        id: version
        env:
          PYTHONPATH: .
        run: poetry run python -c 'import pathlib; from version import update_version; pathlib.Path(os.environ["GITHUB_OUTPUT"]).write_text(f"version={update_version()}")'

      - name: Run tests
        id: test
        env:
          DJANGO_SETTINGS_MODULE: upperroom.settings
          SECRET_KEY: secret
          DATABASE_URL: sqlite:///test.sqlite3
        run: |
          poetry run pytest

      - name: Build Wheel
        run: |
          poetry build --format wheel

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload wheel
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_name: upperroom-${{ steps.version.outputs.version }}-py3-none-any.whl
          asset_path: ./dist/upperroom-${{ steps.version.outputs.version }}-py3-none-any.whl
          asset_content_type: application/zip

[project]
name = "upperroom"
version = "3.3.1"
description = "A website for Churches."
license = "GPL-2.0-only"
readme = "README.md"
requires-python = ">=3.11"
authors = [
    {name = "Craig Holyoak", email = "craig@helmsdeep.org"},
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Framework :: Django :: 5.2",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU General Public License v2 (GPLv2)",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
dependencies = [
    "argon2-cffi (>=23.1.0)",
    "bcrypt (>=4.3.0)",
    "django (>=5.2.0,<5.3.0)",
    "django-csp (>=4.0)",
    "django-environ (>=0.12.0)",
    "django-markdownify (>=0.9.5)",
    "django-robots (>=6.1)",
    "mutagen (>=1.47.0)",
    "weasyprint (>=65.0)",
    "yafg (>=0.3)",

    "gunicorn (>=23.0.0)",
    "setproctitle (>=1.3.5)",
]

[project.urls]
homepage = "https://github.com/thepointchurch/upperroom"
repository = "https://github.com/thepointchurch/upperroom"

[project.scripts]
upperroom = 'upperroom.commands:main'
upperroom-sendrosteremails = 'upperroom.commands:sendrosteremails'
upperroom-restore-fixtures = 'upperroom.commands:restore_fixtures'

[project.optional-dependencies]
aws = [
    "cryptography>=44.0.2",
    "django-amazon-ses>=4.0.1",
    "django-storages>=1.14.6",
]
cache = [
    "django-cacheops>=7.2",
    "django-redis>=5.4.0",
]
google = [
    "google-api-python-client>=2.166.0",
    "google-auth-oauthlib>=1.2.1",
]
pgsql = [
    "psycopg[binary]>=3.2.6",
]

[tool.poetry]
requires-poetry = ">=2.0"
exclude = [
    "**/tests.py",
    "**/tests",
]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.group.dev.dependencies]
coverage = "~7"
django-debug-toolbar = "~5"
gitpython = "~3"
pre-commit = "~4"
pylint = "~3"
pylint-django = "~2"
pytest = "~8"
pytest-django = "~4"
semantic_version = "~2"
tomlkit = "~0"
python-lsp-server = { version = "~1", extras=["isort", "black"] }

[tool.poetry.requires-plugins]
poetry-plugin-shell = ">=1.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


[tool.pylint.master]
jobs = 0
load-plugins = [
    "pylint_django",
]
django-settings-module = "upperroom.settings"

[tool.pylint.format]
max-line-length = 119

[tool.pylint.messages_control]
disable = [
    "missing-module-docstring",
    "missing-class-docstring",
    "missing-function-docstring",
    "duplicate-code",
]

[tool.pylint.variables]
ignored-argument-names = "kwargs|args"


[tool.isort]
combine_as_imports = true
include_trailing_comma = true
known_first_party = "upperroom"
line_length = 119
multi_line_output = 3
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true


[tool.black]
line-length = 119
include = '\.pyi?$'


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
DJANGO_SETTINGS_MODULE = "upperroom.settings"
python_files = "tests.py tests/*.py"
filterwarnings = "ignore::DeprecationWarning:yafg"


[tool.pylsp-mypy]
enabled = false
